{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Components/weather-widget-main/weather-widget-main.component.ts","./src/app/Components/weather-widget-main/weather-widget-main.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CompileStylesheetMetadata } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather-widget-main',\n  templateUrl: './weather-widget-main.component.html',\n  styleUrls: ['./weather-widget-main.component.css']\n})\nexport class WeatherWidgetMainComponent implements OnInit {\n\n  inputError:any;\n  WeatherData:any;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.WeatherData = {\n    main: { },\n    isDay: true\n    }\n    this.getDynamicWeatherData('Gulbarga');\n  }\n\n  getDynamicWeatherData(cityName){\n    const openweathermapAPIkey = '673afc6e1721252ff19b8ac52862cf5a';\n    //let cityName = 'Gulbarga';\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${openweathermapAPIkey}`;\n    console.log(url);\n    \n    fetch(url).then((response) => {\n      if (response.ok) {\n        this.inputError = \"\";\n        return response.json();\n      } else {\n        this.inputError = \"error: Please enter correct city name\";\n        throw new Error('Something went wrong');\n      }\n    })\n    .then(data=>{this.setWeatherData(data)})\n    .catch((error) => {\n      console.log(error)\n    });\n  }\n\n  setWeatherData(data){\n    this.WeatherData = data;\n    let sunsetTime = new Date(this.WeatherData.sys.sunset * 1000);\n    this.WeatherData.sunset_time = sunsetTime.toLocaleDateString();\n    let currentDate = new Date();\n    this.WeatherData.isDay = (currentDate.getTime() < sunsetTime.getTime());\n    this.WeatherData.temp_celcius = (this.WeatherData.main.temp - 273.15).toFixed(0);\n    this.WeatherData.temp_min = (this.WeatherData.main.temp_min - 273.15).toFixed(0);\n    this.WeatherData.temp_max = (this.WeatherData.main.temp_max - 273.15).toFixed(0);\n    this.WeatherData.temp_feels_like = (this.WeatherData.main.feels_like - 273.15).toFixed(0);\n    this.WeatherData.cloud_condition = (this.WeatherData.weather[0].main + \" (\"+ this.WeatherData.weather[0].description + \")\" );\n    \n    console.log(data);\n  }\n\n}\n","<div id=\"divWeatherMain\">\n    <div *ngIf=\"WeatherData.isDay\" class=\"weatherWidgetRow\">\n        <i class=\"fas fa-3x fa-sun sun\"></i>\n    </div>\n    <div *ngIf=\"!WeatherData.isDay\" class=\"weatherWidgetRow\">\n        <i class=\"fas fa-3x fa-moon moon\"></i>\n    </div>\n    <div class=\"weatherWidgetRow cloudDiv\">\n        <i class=\"fas fa-3x fa-cloud cloud\"></i>\n    </div>\n    \n    <div class=\"weatherWidgetRow\" style=\"font-size: 20px; margin-top: 10px;\">{{WeatherData.name}} </div>\n    <div class=\"weatherWidgetRow\" style=\"font-size: 45px\">{{WeatherData.temp_celcius}}° </div>\n    <div class=\"weatherWidgetRow\" style=\"font-size: 12px;\">{{WeatherData.cloud_condition}} </div>\n    <div class=\"weatherWidgetRow\" style=\"font-size: 12px;\">{{WeatherData.temp_min}}°/ {{WeatherData.temp_max}}°</div>\n    <div class=\"weatherWidgetRow\" style=\"font-size: 12px;\">Humidity: {{WeatherData.main.humidity}}% </div>\n    <div class=\"weatherWidgetRow\" style=\"font-size: 8px;\">{{WeatherData.sunset_time}} </div>\n</div>\n<br>\n<div>\n<input type=\"text\" value=\"Gulbarga\" #city class=\"input\">\n<button (click)= 'getDynamicWeatherData(city.value)' class=\"buttonGetWeather\">Get Weather</button>\n</div>\n<div style=\"font-size: 12px; color: red;\">{{inputError}} </div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-weather-app';\n}\n","<app-weather-widget-main></app-weather-widget-main>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { WeatherWidgetMainComponent } from './Components/weather-widget-main/weather-widget-main.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherWidgetMainComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}